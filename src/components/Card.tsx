/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 ./public/tag.glb --types 
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    card: THREE.Mesh;
    clip: THREE.Mesh;
    clamp: THREE.Mesh;
  };
  materials: {
    base: THREE.MeshStandardMaterial;
    metal: THREE.MeshStandardMaterial;
  };
  // animations: GLTFAction[]
};

export function Card(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/tag.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.card.geometry}
        material={materials.base}
        material-map={materials.base.map}
        material-map-anisotropy={16}
        material-clearcoat={1}
        material-clearcoatRoughness={0.15}
        material-roughness={0.3}
        material-metalness={0.5}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.clip.geometry}
        material={materials.metal}
        material-roughness={0.3}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.clamp.geometry}
        material={materials.metal}
      />
    </group>
  );
}

useGLTF.preload("/tag.glb");
